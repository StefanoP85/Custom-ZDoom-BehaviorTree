//==============================================================================
//
// Common classes.
//
//==============================================================================

//------------------------------------------------------------------------------
// Effects.
//------------------------------------------------------------------------------

class BoomGreenChunk : Actor
{
	default
	{
		Alpha 0.25;
		Height 0;
		Radius 0;
		RenderStyle "Add";
		Scale 0.25;
		VSpeed 1;
		+ClientSideOnly;
		+ForceXYBillboard;
		+NoBlockmap;
		+NoGravity;
		+NoInteraction;
		+NoTeleport;
	}
	states
	{
		Spawn:
			TNT1 A 0 NoDelay A_Jump(128, "SpawnAlt");
			XPG1 ABCDEFGHIJK 1 bright;
			XPG2 ABCDEFGHIJK 1 bright;
			XPG3 ABCDEFGHIJ 1 bright;
			stop;
		SpawnAlt:
			XPG1 LMNOPQRSTUV 1 bright;
			XPG2 LMNOPQRSTUV 1 bright;
			XPG3 LMNOPQRSTU 1 bright;
			stop;
	}
}

class BoomGreen : Actor
{
	default
	{
		+ClientSideOnly;
		+ForceXYBillboard;
		+NoBlockmap;
		+NoGravity;
		+NoInteraction;
		+NoTeleport;
	}
	states
	{
		Spawn:
			TNT1 AAAA 0 NoDelay A_SpawnItemEx(
				"BoomGreenChunk",
				Random(-2, 2),
				Random(-2, 2),
				Random(-2, 2),
				(0.01) * Random(-60, 60),
				(0.01) * Random(-60, 60),
				(0.01) * Random(-60, 60),
				0, 0, 8
			);
			stop;
	}
}

class GreenLightningSmall : Actor
{
	default
	{
		Alpha 0.55;
		RenderStyle "Add";
		Scale 0.25;
		+ClientSideOnly;
		+ForceXYBillboard;
		+NoBlockmap;
		+NoGravity;
		+NoInteraction;
		+NoTeleport;
	}
	states
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				int Offset = Random(0, 71);
				return ResolveState("See") + Offset;
			}
		See:
			GRL1 ABCDEFGHIJKLMNOPQR 0 A_Jump(256, "Fade");
			GRL2 ABCDEFGHIJKLMNOPQR 0 A_Jump(256, "Fade");
			GRL3 ABCDEFGHIJKLMNOPQR 0 A_Jump(256, "Fade");
			GRL4 ABCDEFGHIJKLMNOPQR 0 A_Jump(256, "Fade");
		Fade:
			---- A 1 bright A_FadeOut(0.15);
			loop;
	}
}

class GreenLightningTiny : GreenLightningSmall
{
	default
	{
		Scale 0.15;
	}
}

class GreenLightningMedium : GreenLightningSmall
{
	default
	{
		Scale 0.4;
	}
}

class GreenLightningLarge : GreenLightningSmall
{
	default
	{
		Scale 0.65;
	}
}

class GreenLightningHuge : GreenLightningSmall
{
	default
	{
		Scale 0.8;
	}
}

class GreenPlasmaSmoke : Actor
{
	default
	{
		Alpha 0.85;
		Height 0;
		Radius 0;
		RenderStyle "Add";
		Scale 0.3;
		VSpeed 1;
	}
	states
	{
		Spawn:
			ESMK ABCDEFGHIJKLMNOPQ 1 A_FadeOut(0.01);
			stop;
	}
}

//------------------------------------------------------------------------------
// Cyber Ball.
//------------------------------------------------------------------------------

class CyberBallSmallExplosion : Actor
{
	default
	{
		Alpha 0.7;
		Height 0;
		Radius 0;
		RenderStyle "Add";
		Scale 0.4;
		+ClientSideOnly;
		+ForceXYBillboard;
		+NoBlockmap;
		+NoGravity;
		+NoInteraction;
		+NoTeleport;
	}
	states
	{
		Spawn:
			BAL0 FGHIJKLM 2 bright A_FadeOut(0.05);
			stop;
	}
}

class CyberBallSmallTrail : Actor
{
	default
	{
		Alpha 0.9;
		RenderStyle "Add";
		Scale 0.15;
		+ClientSideOnly;
		+ForceXYBillboard;
		+NoBlockmap;
		+NoGravity;
		+NoInteraction;
		+NoTeleport;
	}
	states
	{
		Spawn:
			BAL0 N 1 bright A_FadeOut(0.02);
			loop;
	}
}

class CyberBallSmall : KAI_BaseProjectile
{
	default
	{
		Alpha 0.75;
		Damage 10;
		Height 8;
		Radius 13;
		RenderStyle "Add";
		Scale 0.1;
		Speed 64;
		DeathSound "CyberBallSmall/shotx";
		SeeSound "CyberBallSmall/attack";
		+DontReflect;
		+Randomize;
		+SeekerMissile;
	}
	states
	{
		Spawn:
			BAL0 ABCDE 1 bright
			{
				A_SpawnItem("CyberBallSmallTrail");
				A_SeekerMissile(0, 5, SMF_PRECISE);
				A_SpawnItemEx("GreenLightningSmall", -Vel.X, -Vel.Y, -Vel.Z, Vel.X, Vel.Y, Vel.Z, 0, SXF_ABSOLUTEMOMENTUM | SXF_ABSOLUTEPOSITION, 192);
				A_SpawnItemEx("GreenLightningTiny", -Vel.X, -Vel.Y, -Vel.Z, Vel.X, Vel.Y, Vel.Z, 0, SXF_ABSOLUTEMOMENTUM | SXF_ABSOLUTEPOSITION, 128);
			}
			loop;
		Death:
			BAL0 F 2 bright
			{
				A_SpawnItem("GreenPlasmaSmoke");
				A_SpawnItem("BoomGreen");
				A_SpawnItemEx("GreenLightningTiny", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 48);
				A_SpawnItemEx("GreenLightningTiny", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 48);
				A_SpawnItemEx("GreenLightningTiny", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 48);
				A_SpawnItemEx("GreenLightningSmall", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 104);
				A_SpawnItemEx("GreenLightningSmall", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 104);
				A_SpawnItemEx("GreenLightningMedium", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 148);
				A_SpawnItem("CyberBallSmallExplosion");
			}
			BAL0 GHIJKL 2 bright;
			BAL0 M 2 bright
			{
				A_Explode(64, 64);
				A_BFGSpray("BFGExtra", 40, 3, 360, 256, 32, 0, BFGF_MISSILEORIGIN);
			}
			stop;
	}
}

class CyberBallLargeExplosion : Actor
{
	default
	{
		Alpha 0.7;
		Height 0;
		Radius 0;
		RenderStyle "Add";
		Scale 0.8;
		+ClientSideOnly;
		+ForceXYBillboard;
		+NoBlockmap;
		+NoGravity;
		+NoInteraction;
		+NoTeleport;
	}
	states
	{
		Spawn:
			BAL0 FGHIJKLM 2 bright A_FadeOut(0.05);
			stop;
	}
}

class CyberBallLargeTrail : Actor
{
	default
	{
		Alpha 0.9;
		RenderStyle "Add";
		Scale 0.3;
		+ClientSideOnly;
		+ForceXYBillboard;
		+NoBlockmap;
		+NoGravity;
		+NoInteraction;
		+NoTeleport;
	}
	states
	{
		Spawn:
			BAL0 N 1 bright A_FadeOut(0.02);
			loop;
	}
}

class CyberBallLarge : KAI_BaseProjectile
{
	default
	{
		Alpha 0.75;
		Damage 100;
		Height 8;
		Radius 13;
		RenderStyle "Add";
		Scale 0.25;
		Speed 64;
		SeeSound "CyberBallLarge/attack";
		DeathSound "CyberBallLarge/shotx";
		Projectile;
		+DontReflect;
		+Randomize;
		+SeekerMissile;
	}
	states
	{
		Spawn:
			BAL0 ABCDE 1 bright
			{
				A_SpawnItem("CyberBallLargeTrail");
				A_SeekerMissile(0, 5, SMF_PRECISE);
				A_SpawnItemEx("GreenLightningMedium", -Vel.X, -Vel.Y, -Vel.Z, Vel.X, Vel.Y, Vel.Z, 0, SXF_ABSOLUTEMOMENTUM | SXF_ABSOLUTEPOSITION, 192);
				A_SpawnItemEx("GreenLightningSmall", -Vel.X, -Vel.Y, -Vel.Z, Vel.X, Vel.Y, Vel.Z, 0, SXF_ABSOLUTEMOMENTUM | SXF_ABSOLUTEPOSITION, 128);
			}
			loop;
		Death:
			BAL0 F 2 bright
			{
				A_SpawnItem("GreenPlasmaSmoke");
				A_SpawnItem("BoomGreen");
				A_SpawnItemEx("GreenLightningSmall", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 48);
				A_SpawnItemEx("GreenLightningSmall", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 48);
				A_SpawnItemEx("GreenLightningSmall", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 48);
				A_SpawnItemEx("GreenLightningMedium", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 104);
				A_SpawnItemEx("GreenLightningMedium", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 104);
				A_SpawnItemEx("GreenLightningLarge", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 148);
				A_SpawnItem("CyberBallLargeExplosion");
			}
			BAL0 GHIJKL 2 bright;
			BAL0 M 2 bright
			{
				A_Explode(256, 256);
				A_BFGSpray("BFGExtra", 40, 15, 360, 256, 32, 0, BFGF_MISSILEORIGIN);
			}
			stop;
	}
}

//------------------------------------------------------------------------------
// Ki Ball.
//------------------------------------------------------------------------------

class KiBallCharging : Actor
{
	float CurrentScale;
	void SpawnParticles()
	{
		SetOrigin(target.pos + (+24, -24, 72), false);
		CurrentScale = CurrentScale + 0.01;
		A_SetScale(CurrentScale);
		for ( int i = 0; i < 64; i++ )
		{
			double PartAngle = FRandom(  0.0, 360.0);
			double PartPitch = FRandom(-90.0,  90.0);
			double PartDstnc = FRandom(64.0, 128.0);
			double PartSpeed = -8.0;
			double CosAngle = Cos(PartAngle);
			double SinAngle = Sin(PartAngle);
			double CosPitch = Cos(PartPitch);
			double SinPitch = Sin(PartPitch);
			int PartTics = PartDstnc / Abs(PartSpeed);
			string PartColor;
			switch ( Random(1, 3) )
			{
				case 1:
					PartColor = "7799FF";
					break;
				case 2:
					PartColor = "FFFFFF";
					break;
				case 3:
					PartColor = "2222FF";
					break;
			}
			A_SpawnParticle(
				PartColor,
				SPF_FULLBRIGHT,
				PartTics,
				10.0,
				0,
				CosPitch * (CosAngle * PartDstnc),
				CosPitch * (SinAngle * PartDstnc),
				SinPitch * PartDstnc,
				CosPitch * (CosAngle * PartSpeed),
				CosPitch * (SinAngle * PartSpeed),
				SinPitch * PartSpeed);
		}
	}
	default
	{
		Alpha 1;
		Damage 0;
		Scale 0.0;
		Speed 0;
		+NoGravity;
	}
	states
	{
		Spawn:
			KIBA AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 2 SpawnParticles();
			stop;
	}
}

class KiBallExplosion : Actor
{
	float CurrentScale;
	override void PostBeginPlay()
	{
		super.PostBeginPlay();
		CurrentScale = 1.0;
	}
	void SpawnParticles()
	{
		CurrentScale = CurrentScale - 0.05;
		A_SetScale(CurrentScale);
		for ( int i = 0; i < 64; i++ )
		{
			double PartAngle = FRandom(  0.0, 360.0);
			double PartPitch = FRandom(-90.0,  90.0);
			double PartDstnc = FRandom(64.0, 128.0);
			double PartSpeed = -8.0;
			double CosAngle = Cos(PartAngle);
			double SinAngle = Sin(PartAngle);
			double CosPitch = Cos(PartPitch);
			double SinPitch = Sin(PartPitch);
			int PartTics = PartDstnc / Abs(PartSpeed);
			string PartColor;
			switch ( Random(1, 3) )
			{
				case 1:
					PartColor = "7799FF";
					break;
				case 2:
					PartColor = "FFFFFF";
					break;
				case 3:
					PartColor = "2222FF";
					break;
			}
			A_SpawnParticle(
				PartColor,
				SPF_FULLBRIGHT,
				PartTics,
				10.0,
				0,
				CosPitch * (CosAngle * PartDstnc),
				CosPitch * (SinAngle * PartDstnc),
				SinPitch * PartDstnc,
				-2 * CosPitch * (CosAngle * PartSpeed),
				-2 * CosPitch * (SinAngle * PartSpeed),
				-2 * SinPitch * PartSpeed);
		}
		A_FadeOut(0.02);
	}
	default
	{
		Alpha 0.7;
		Height 0;
		Radius 0;
		RenderStyle "Add";
		+ClientSideOnly;
		+ForceXYBillboard;
		+NoBlockmap;
		+NoGravity;
		+NoInteraction;
		+NoTeleport;
	}
	states
	{
		Spawn:
			KIBA AAAAAAAAAAAAAAAA 2 bright SpawnParticles();
			BAL0 FGHIJKLM 2 bright A_FadeOut(0.05);
			stop;
	}
}

class KiBallTrail : Actor
{
	default
	{
		Alpha 0.9;
		RenderStyle "Add";
		+ClientSideOnly;
		+ForceXYBillboard;
		+NoBlockmap;
		+NoGravity;
		+NoInteraction;
		+NoTeleport;
	}
	states
	{
		Spawn:
			BAL0 N 1 Bright A_FadeOut(0.02);
			loop;
	}
}

class LargeKiBall : KAI_BaseProjectile
{
	default
	{
		Alpha 0.75;
		Damage 500;
		Height 192;
		Radius 96;
		RenderStyle "Add";
		Scale 0.5;
		Speed 48;
		SeeSound "LargeKiBall/attack";
		DeathSound "LargeKiBall/shotx";
		Projectile;
		+DontReflect;
		+Randomize;
	}
	states
	{
		Spawn:
			KIBA B 2 bright
			{
				for ( int i = 0; i <= 7; i++ )
				{
					A_SpawnItem("KiBallTrail");
					A_SpawnItemEx("GreenLightningHuge", -Vel.X, -Vel.Y, -Vel.Z, Vel.X, Vel.Y, Vel.Z, 0, SXF_ABSOLUTEMOMENTUM | SXF_ABSOLUTEPOSITION, 192);
					A_SpawnItemEx("GreenLightningLarge", -Vel.X, -Vel.Y, -Vel.Z, Vel.X, Vel.Y, Vel.Z, 0, SXF_ABSOLUTEMOMENTUM | SXF_ABSOLUTEPOSITION, 192);
					A_SpawnItemEx("GreenLightningMedium", -Vel.X, -Vel.Y, -Vel.Z, Vel.X, Vel.Y, Vel.Z, 0, SXF_ABSOLUTEMOMENTUM | SXF_ABSOLUTEPOSITION, 192);
				}
			}
			loop;
		Death:
			KIBA B 0 bright
			{
				A_SpawnItem("GreenPlasmaSmoke");
				A_SpawnItem("BoomGreen");
				A_SpawnItemEx("GreenLightningSmall", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 48);
				A_SpawnItemEx("GreenLightningSmall", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 48);
				A_SpawnItemEx("GreenLightningSmall", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 48);
				A_SpawnItemEx("GreenLightningMedium", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 104);
				A_SpawnItemEx("GreenLightningMedium", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 104);
				A_SpawnItemEx("GreenLightningLarge", Random(-4, 4), Random(-4, 4), Random(-4, 4), 0, 0, 0, 0, 0, 148);
				A_SpawnItem("KiBallExplosion");
				A_Explode(256, 256);
				A_BFGSpray("BFGExtra", 160, 15, 360, 256, 32, 0, BFGF_MISSILEORIGIN);
			}
			stop;
	}
}

class SmallKiBall : KAI_BaseProjectile
{
	default
	{
		Damage 4;
		Height 8;
		Radius 8;
		Scale 1;
		Speed 32;
		RenderStyle "Add";
		DeathSound "SmallKiBall/shotx";
		SeeSound "SmallKiBall/attack";
		Projectile;
		+DontReflect;
		+Randomize;
	}
	states
	{
		Spawn:
			BALA ABCDEFGHIJKLMNOPQRST 2;
			loop;
		Death:
			BALB ABCDEFGHIJKLMNOP 2;
			stop;
	}
}
